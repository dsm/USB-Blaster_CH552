name: deploy

on:
  push:
    branches: [ "master" ]
    tags:
        - '[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches: [ "master"]
  workflow_dispatch:
  
jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
          sudo apt-get update
          sudo apt-get install -y build-essential sdcc

    - name: 'Build'
      run: |
          make 

    - name: 'Upload artifact: AppImage'
      uses: actions/upload-artifact@v4
      with:
          name: usb_blaster
          path: usb_blaster.bin
              
  create-release:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
     - build-linux
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ~/artifacts

    - name: Check if continuous_build release exists
      run: |
        if [ "${{github.ref_type}}" == "tag" ]; then
          if gh release view ${{ github.ref_name }} --repo $GITHUB_REPOSITORY &> /dev/null; then
            gh release delete ${{ github.ref_name }} --repo $GITHUB_REPOSITORY
          fi
        elif [ "${{github.ref_type}}" == "branch" ]; then
          if gh release view continuous_build --repo $GITHUB_REPOSITORY &> /dev/null; then
            gh release delete continuous_build --repo $GITHUB_REPOSITORY --cleanup-tag  --yes
          fi
        fi

      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create GitHub Release
      continue-on-error: false
      run: |
        # Find existing binary files
        bin_files=$(find ~/artifacts -name "*.bin" -print0 | xargs -0 echo)

        # Create release only if there are files to upload
        if [ -n "$bin_files" ] ; then
          if [ "${{github.ref_type}}" != "tag" ]; then
            gh release create continuous_build \
              $bin_files \
              -p \
              --repo $GITHUB_REPOSITORY \
              --title "Continuous build" \
              --notes "Automated release for commit ${{ github.sha }}"
          else
              gh release create ${{ github.ref_name }} \
              $bin_files \
              --repo $GITHUB_REPOSITORY \
              --title "v${{ github.ref_name }}" \
              --generate-notes\
              --verify-tag
          fi
        else
          echo "No artifacts to upload."
        fi
        
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
